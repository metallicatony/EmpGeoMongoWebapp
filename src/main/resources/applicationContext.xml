<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mongo="http://www.springframework.org/schema/data/mongo"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
              http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
              http://www.springframework.org/schema/context 
              http://www.springframework.org/schema/context/spring-context-3.0.xsd
              http://www.springframework.org/schema/data/mongo 
              http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd">
  
<context:property-placeholder location="classpath*:database.properties"/>
<context:component-scan base-package="com.organization"/>

<!--  mongo db factory with user credentials -->
<mongo:db-factory dbname="${mongo.databaseName}" username="${mongo.username}" password="${mongo.password}"/>

<!--  type mapper and converter to avoid persisting _class in mongo documents -->
<bean id="mongoMappingContext" class="org.springframework.data.mongodb.core.mapping.MongoMappingContext" />
<bean id="mongoTypeMapper" class="org.springframework.data.mongodb.core.convert.DefaultMongoTypeMapper">
    <constructor-arg name="typeKey"> <null /> </constructor-arg>
</bean>

<bean id="mongoConverter" class="org.springframework.data.mongodb.core.convert.MappingMongoConverter">
  <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
  <constructor-arg name="mappingContext" ref="mongoMappingContext" />
   <property name="typeMapper" ref="mongoTypeMapper"></property>
</bean>

<!--  mongo template that will be autowired in the application spring repository -->
<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
    <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
    <constructor-arg name="mongoConverter" ref="mongoConverter" />
    <!-- <constructor-arg name="userCredentials" ref="userCredentials"/>  -->
    <property name="writeResultChecking" value="EXCEPTION" /> 
</bean>
 

<!-- another way to instantiate template without avoiding _class in mongo docs

<mongo:db-factory dbname="${mongo.databaseName}"/>

<! creates a mongo db instance >
<bean id="mongoInstance" class="org.springframework.data.mongodb.core.MongoFactoryBean">
	<property name="host" value="${mongo.hostname}" />
	<property name="port" value="${mongo.port}" />
</bean>
 
<! credentials needed to connect to mongo db >
<bean id="userCredentials" class="org.springframework.data.authentication.UserCredentials">
    <constructor-arg name="username" value="${mongo.username}" />
    <constructor-arg name="password" value="${mongo.password}" />
</bean>

<! creates a mongo template which will injected into needed DAO classes >
<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
	<constructor-arg name="mongo" ref="mongoInstance" />
	<constructor-arg name="databaseName" value="${mongo.databaseName}" />
	<constructor-arg name="userCredentials" ref="userCredentials"/>
</bean>
 -->
 
</beans>